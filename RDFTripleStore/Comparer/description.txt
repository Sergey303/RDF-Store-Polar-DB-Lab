Comparer2 - класс кортеж из двух элементов
Он нужен для сравнения картежей.
От элементов, нужен только метод CompareTo, поэтому для хранения элементов картежа(полей) достаточно интерфейса IComparable.
Возращать элементы потом куда-то не нужно, поэтому  нет необходимости делать его шаблонным, указывать типы-параметры элеентов.

Сравнение с другим Comparer2 - это сравнение сначала первых элементов, и только если они совпали, сравниваются вторые.
Сравнение с другим Comparer3, т.е. картеж длины 2 можно сравнить с картежем длины 3:если совпали первые элементы и совпали вторые элементы,то картежи равны!
Независимо от третьего элемента. Если первый элемент картежа длины 2 больше первого элемента картежа длины 3, то картеж длины 2 больше, не важно сколько в них элементов.
Сравнение с другим Comparer, т.е. с картежем длины 1: сравниваются только первые элементы.

Например, если отсортирвать массив картежей: (5), (10, -1), (4, 1000,100)
то получится 
(4, 1000, 100) - самый маленький
(5)
(10, -1)


Как это реализовано?
Comparer3 - наследуется от Comparer2, добавляя третий элемент,
переопределяя виртуальный метод CompareTo(object).
Теперь если object - тоже Comparer3 - сравниваются все три элемента методом CompareTo(Comparer3).
Если нет, но object - Comparer2, то вызываем родительский метод CompareTo(Comparer2).

Comparer2 реализует	CompareTo(object),
Если объект Comparer3 - нам не нужно даже это проверять, т.к. сравнивать с третим элементом не нужно. Достаточно того, что тип object-унаследован от Comparer2

Тип Comparer - картеж длины 1 можно заменить на сам элемент IComperable?
В одну сторону проблем нет: new Comparer2(5,5).CompareTo(0) - сравнит с первым элементом своего картежа.
А в обратную сторону int i=0; i.CompareTo(new Comperar2(5,5)) ???

